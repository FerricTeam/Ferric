name: Ferric CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
  workflow_dispatch:

env:
  PUBLICIZER: https://github.com/iRebbok/APublicizer/releases/download/1.0.3/native-win-x64-release.tar.gz
  RUST_INSTALL_LOCATION: C:\hostedtoolcache\windows\steamcmd\latest\i386\steamapps\common\rust_dedicated

jobs:
  build:
    runs-on: windows-latest
    # Prevent double running for push & pull_request events from the main repo
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'FerricTeam/Ferric'
    
    steps:
    #- name: Download 7zr
    #  uses: carlosperate/download-file-action@v1.1.1
    #  with:
    #    file-url: 'https://www.7-zip.org/a/7zr.exe'
    #    file-name: '7zr.exe'
    #- name: Download 7zip extras
    #  uses: carlosperate/download-file-action@v1.1.1
    #  with:
    #    file-url: 'https://www.7-zip.org/a/7z2201-extra.7z'
    #    file-name: '7zextra.7z'
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.1.3
      with:
        # Folder location of where vswhere.exe is located if a self-hosted agent
        # vswhere-path: # optional
        # Version of Visual Studio to search; defaults to latest if not specified
        # vs-version: # optional
        # Enable searching for pre-release versions of Visual Studio/MSBuild
        vs-prerelease: false # optional
        # The preferred processor architecture of MSBuild. Can be either "x86" or "x64". "x64" is only available from Visual Studio version 17.0 and later.
        msbuild-architecture: x64
    - name: Setup SteamCMD
      # You may pin to the exact commit or the version.
      # uses: CyberAndrii/setup-steamcmd@1a23c36fdf39218db07a406b1fda2775eb0636c3
      uses: CyberAndrii/setup-steamcmd@v1.1.4
      
    - uses: actions/checkout@v2.3.4
    
    #- name: Extract 7za
    #  shell: pwsh
    #  run: |
    #    .\7zr.exe e -i!x64/7za.exe 7zextra.7z
    - name: Download APublicizer
      uses: carlosperate/download-file-action@v1.1.1
      with:
        file-url: 'https://github.com/iRebbok/APublicizer/releases/latest/download/native-win-x64-release.tar.gz'
        file-name: 'release.tar.gz'
    - name: Download rust sever
      shell: pwsh
      run: |
        steamcmd +login anonymous +app_update 258550 validate +quit
    - name: Extract APublicizer
      shell: pwsh
      run: |
        tar -xzvf release.tar.gz
    - name: Publicize AssemblyCSharp
      shell: pwsh
      run: |
        .\APublicizer ${{ env.RUST_INSTALL_LOCATION }}\RustDedicated_Data\Managed\Assembly-CSharp.dll
    - name: Build
      env:
        FERRIC_REFS: ${{ env.RUST_INSTALL_LOCATION }}\RustDedicated_Data\Managed
      shell: pwsh
      run: |
        msbuild.exe Ferric.sln /t:Build/p:Configuration=Release;Platform="Any CPU"
    - name: Upload artifacts
      uses: actions/upload-artifact@v3.1.0
      with:
        name: Build Results
        path: |
            Ferric/bin/Release
            Ferric.Example/bin/Release
            Ferric.Injection/bin/Release
            Ferric.Patcher/bin/Release
